name: cd

on: push

# on:
#     push:
#         branches:
#             - main
#             - next
#     pull_request:
#         branches:
#             - main
#             - next
env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
    cd:
        runs-on: ubuntu-latest
        permissions:
          packages: write
          contents: read

        steps:
            - uses: actions/checkout@v4
            # - uses: actions/setup-node@v4
            #   with:
            #       node-version: 'latest'

            # - name: ðŸ“¦ Install dependencies
            #   run: npm ci

            - name: ðŸš§ Build image
              run: |
                env GITHUB_RUN_ID=${GITHUB_RUN_ID} IMAGE_SOURCE=https://github.com/$IMAGE_NAME sh -c 'npm run docker:build'
                docker tag iconify/api $IMAGE_NAME

            - name: ðŸ”“ Log in to registry
              run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # - name: ðŸ§ª Test project
            #   run: npm run test

            - name: Push image
              run: |
                IMAGE_ID=ghcr.io/$IMAGE_NAME
                IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

                VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

                [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

                [ "$VERSION" == "main" ] && VERSION=latest
                echo IMAGE_ID=$IMAGE_ID
                echo VERSION=$VERSION
                docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
                docker push $IMAGE_ID:$VERSION